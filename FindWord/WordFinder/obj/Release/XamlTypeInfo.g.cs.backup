//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace FindWord
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::FindWord.FindWord_XamlTypeInfo.XamlTypeInfoProvider _provider;

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::FindWord.FindWord_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.String fullName)
        {
            if(_provider == null)
            {
                _provider = new global::FindWord.FindWord_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace FindWord.FindWord_XamlTypeInfo
{
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            string standardName;
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            if(_xamlTypeToStandardName.TryGetValue(type, out standardName))
            {
                xamlType = GetXamlTypeByName(standardName);
            }
            else
            {
                xamlType = GetXamlTypeByName(type.FullName);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (global::System.String.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypes.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            xamlType = CreateXamlType(typeName);
            if (xamlType != null)
            {
                _xamlTypes.Add(typeName, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (global::System.String.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType> _xamlTypes = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();
        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember> _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();
        global::System.Collections.Generic.Dictionary<global::System.Type, string> _xamlTypeToStandardName = new global::System.Collections.Generic.Dictionary<global::System.Type, string>();

        private void AddToMapOfTypeToStandardName(global::System.Type t, global::System.String str)
        {
            if(!_xamlTypeToStandardName.ContainsKey(t))
            {
                _xamlTypeToStandardName.Add(t, str);
            }
        }

        private object Activate_0_ViewModelLocator() { return new global::FindWord.Common.ViewModelLocator(); }

        private object Activate_9_UndoRedoService() { return new global::FindWord.Services.UndoRedoService(); }

        private object Activate_10_SearchService() { return new global::FindWord.Services.SearchService(); }

        private object Activate_11_AppState() { return new global::FindWord.Services.AppState(); }

        private object Activate_12_PrivacyControl() { return new global::FindWord.Controls.PrivacyControl(); }

        private object Activate_13_HelpControl() { return new global::FindWord.Controls.HelpControl(); }

        private object Activate_14_LayoutAwarePage() { return new global::FindWord.Common.LayoutAwarePage(); }

        private object Activate_15_WordsWithTheSameLengthPage() { return new global::FindWord.Views.WordsWithTheSameLengthPage(); }

        private object Activate_17_AboutControl() { return new global::FindWord.Controls.AboutControl(); }

        private object Activate_18_Shell() { return new global::FindWord.Views.Shell(); }

        private object Activate_19_StartPageItemsDataTemplateSelector() { return new global::FindWord.Common.StartPageItemsDataTemplateSelector(); }

        private object Activate_20_StartPage() { return new global::FindWord.Views.StartPage(); }


        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(string typeName)
        {
            global::FindWord.FindWord_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::FindWord.FindWord_XamlTypeInfo.XamlUserType userType;

            switch (typeName)
            {
            case "Object":
                xamlType = new global::FindWord.FindWord_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::System.Object));
                break;

            case "Windows.UI.Xaml.Controls.UserControl":
                xamlType = new global::FindWord.FindWord_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::Windows.UI.Xaml.Controls.UserControl));
                break;

            case "String":
                xamlType = new global::FindWord.FindWord_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::System.String));
                break;

            case "Windows.UI.Xaml.Controls.Page":
                xamlType = new global::FindWord.FindWord_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::Windows.UI.Xaml.Controls.Page));
                break;

            case "Windows.UI.Xaml.Controls.Grid":
                xamlType = new global::FindWord.FindWord_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::Windows.UI.Xaml.Controls.Grid));
                break;

            case "Windows.UI.Xaml.Controls.Panel":
                xamlType = new global::FindWord.FindWord_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::Windows.UI.Xaml.Controls.Panel));
                break;

            case "Windows.UI.Xaml.Controls.Frame":
                xamlType = new global::FindWord.FindWord_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::Windows.UI.Xaml.Controls.Frame));
                break;

            case "Windows.UI.Xaml.Controls.DataTemplateSelector":
                xamlType = new global::FindWord.FindWord_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::Windows.UI.Xaml.Controls.DataTemplateSelector));
                break;

            case "Windows.UI.Xaml.DataTemplate":
                xamlType = new global::FindWord.FindWord_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::Windows.UI.Xaml.DataTemplate));
                break;

            case "FindWord.Common.ViewModelLocator":
                userType = new global::FindWord.FindWord_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::FindWord.Common.ViewModelLocator), GetXamlTypeByName("Object"));
                userType.Activator = Activate_0_ViewModelLocator;
                userType.AddMemberName("Container");
                userType.AddMemberName("NavigationService");
                userType.AddMemberName("Hub");
                userType.AddMemberName("DialogService");
                userType.AddMemberName("ShellViewModel");
                userType.AddMemberName("StartPageViewModel");
                userType.AddMemberName("WordsWithTheSameLengthViewModel");
                userType.AddMemberName("UndoRedoService");
                userType.AddMemberName("SearchService");
                userType.AddMemberName("AppState");
                xamlType = userType;
                break;

            case "MetroIoc.IContainer":
                userType = new global::FindWord.FindWord_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::MetroIoc.IContainer), null);
                xamlType = userType;
                break;

            case "FindWord.Services.INavigationService":
                userType = new global::FindWord.FindWord_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::FindWord.Services.INavigationService), null);
                xamlType = userType;
                break;

            case "FindWord.Messaging.IHub":
                userType = new global::FindWord.FindWord_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::FindWord.Messaging.IHub), null);
                xamlType = userType;
                break;

            case "FindWord.Services.IDialogService":
                userType = new global::FindWord.FindWord_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::FindWord.Services.IDialogService), null);
                xamlType = userType;
                break;

            case "FindWord.ViewModels.ShellViewModel":
                userType = new global::FindWord.FindWord_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::FindWord.ViewModels.ShellViewModel), GetXamlTypeByName("FindWord.Common.BindableBase"));
                xamlType = userType;
                break;

            case "FindWord.Common.BindableBase":
                userType = new global::FindWord.FindWord_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::FindWord.Common.BindableBase), GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case "FindWord.ViewModels.StartPageViewModel":
                userType = new global::FindWord.FindWord_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::FindWord.ViewModels.StartPageViewModel), GetXamlTypeByName("FindWord.Common.BindableBase"));
                xamlType = userType;
                break;

            case "FindWord.ViewModels.WordsWithTheSameLengthViewModel":
                userType = new global::FindWord.FindWord_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::FindWord.ViewModels.WordsWithTheSameLengthViewModel), GetXamlTypeByName("FindWord.Common.BindableBase"));
                xamlType = userType;
                break;

            case "FindWord.Services.UndoRedoService":
                userType = new global::FindWord.FindWord_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::FindWord.Services.UndoRedoService), GetXamlTypeByName("Object"));
                userType.Activator = Activate_9_UndoRedoService;
                xamlType = userType;
                break;

            case "FindWord.Services.SearchService":
                userType = new global::FindWord.FindWord_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::FindWord.Services.SearchService), GetXamlTypeByName("Object"));
                userType.Activator = Activate_10_SearchService;
                xamlType = userType;
                break;

            case "FindWord.Services.AppState":
                userType = new global::FindWord.FindWord_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::FindWord.Services.AppState), GetXamlTypeByName("Object"));
                userType.Activator = Activate_11_AppState;
                xamlType = userType;
                break;

            case "FindWord.Controls.PrivacyControl":
                userType = new global::FindWord.FindWord_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::FindWord.Controls.PrivacyControl), GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_12_PrivacyControl;
                userType.AddMemberName("Version");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("Email");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("Policy");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("Title");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                xamlType = userType;
                break;

            case "FindWord.Controls.HelpControl":
                userType = new global::FindWord.FindWord_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::FindWord.Controls.HelpControl), GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_13_HelpControl;
                userType.AddMemberName("Version");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("Title");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("QuestionKeyword");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("QuestionKeywordDescription");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("StarKeyword");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("StarKeywordDescription");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("PlusKeyword");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("PlusKeywordDescription");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                xamlType = userType;
                break;

            case "FindWord.Common.LayoutAwarePage":
                userType = new global::FindWord.FindWord_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::FindWord.Common.LayoutAwarePage), GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_14_LayoutAwarePage;
                xamlType = userType;
                break;

            case "FindWord.Views.WordsWithTheSameLengthPage":
                userType = new global::FindWord.FindWord_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::FindWord.Views.WordsWithTheSameLengthPage), GetXamlTypeByName("FindWord.Common.LayoutAwarePage"));
                userType.Activator = Activate_15_WordsWithTheSameLengthPage;
                xamlType = userType;
                break;

            case "FindWord.Views.ExtendedSplash":
                userType = new global::FindWord.FindWord_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::FindWord.Views.ExtendedSplash), GetXamlTypeByName("Windows.UI.Xaml.Controls.Grid"));
                xamlType = userType;
                break;

            case "FindWord.Controls.AboutControl":
                userType = new global::FindWord.FindWord_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::FindWord.Controls.AboutControl), GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_17_AboutControl;
                userType.AddMemberName("Version");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("Title");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("VersionTitle");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("OurName");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("ProductDetailsTitle");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("ProductDetails");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                xamlType = userType;
                break;

            case "FindWord.Views.Shell":
                userType = new global::FindWord.FindWord_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::FindWord.Views.Shell), GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_18_Shell;
                userType.AddMemberName("Frame");
                xamlType = userType;
                break;

            case "FindWord.Common.StartPageItemsDataTemplateSelector":
                userType = new global::FindWord.FindWord_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::FindWord.Common.StartPageItemsDataTemplateSelector), GetXamlTypeByName("Windows.UI.Xaml.Controls.DataTemplateSelector"));
                userType.Activator = Activate_19_StartPageItemsDataTemplateSelector;
                userType.AddMemberName("WordTemplate");
                xamlType = userType;
                break;

            case "FindWord.Views.StartPage":
                userType = new global::FindWord.FindWord_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::FindWord.Views.StartPage), GetXamlTypeByName("FindWord.Common.LayoutAwarePage"));
                userType.Activator = Activate_20_StartPage;
                xamlType = userType;
                break;

            }
            return xamlType;
        }


        private object get_0_ViewModelLocator_Container(object instance)
        {
            var that = (global::FindWord.Common.ViewModelLocator)instance;
            return that.Container;
        }
        private object get_1_ViewModelLocator_NavigationService(object instance)
        {
            var that = (global::FindWord.Common.ViewModelLocator)instance;
            return that.NavigationService;
        }
        private object get_2_ViewModelLocator_Hub(object instance)
        {
            var that = (global::FindWord.Common.ViewModelLocator)instance;
            return that.Hub;
        }
        private object get_3_ViewModelLocator_DialogService(object instance)
        {
            var that = (global::FindWord.Common.ViewModelLocator)instance;
            return that.DialogService;
        }
        private object get_4_ViewModelLocator_ShellViewModel(object instance)
        {
            var that = (global::FindWord.Common.ViewModelLocator)instance;
            return that.ShellViewModel;
        }
        private object get_5_ViewModelLocator_StartPageViewModel(object instance)
        {
            var that = (global::FindWord.Common.ViewModelLocator)instance;
            return that.StartPageViewModel;
        }
        private object get_6_ViewModelLocator_WordsWithTheSameLengthViewModel(object instance)
        {
            var that = (global::FindWord.Common.ViewModelLocator)instance;
            return that.WordsWithTheSameLengthViewModel;
        }
        private object get_7_ViewModelLocator_UndoRedoService(object instance)
        {
            var that = (global::FindWord.Common.ViewModelLocator)instance;
            return that.UndoRedoService;
        }
        private object get_8_ViewModelLocator_SearchService(object instance)
        {
            var that = (global::FindWord.Common.ViewModelLocator)instance;
            return that.SearchService;
        }
        private object get_9_ViewModelLocator_AppState(object instance)
        {
            var that = (global::FindWord.Common.ViewModelLocator)instance;
            return that.AppState;
        }
        private object get_10_PrivacyControl_Version(object instance)
        {
            var that = (global::FindWord.Controls.PrivacyControl)instance;
            return that.Version;
        }
        private void set_10_PrivacyControl_Version(object instance, object Value)
        {
            var that = (global::FindWord.Controls.PrivacyControl)instance;
            that.Version = (global::System.String)Value;
        }
        private object get_11_PrivacyControl_Email(object instance)
        {
            var that = (global::FindWord.Controls.PrivacyControl)instance;
            return that.Email;
        }
        private void set_11_PrivacyControl_Email(object instance, object Value)
        {
            var that = (global::FindWord.Controls.PrivacyControl)instance;
            that.Email = (global::System.String)Value;
        }
        private object get_12_PrivacyControl_Policy(object instance)
        {
            var that = (global::FindWord.Controls.PrivacyControl)instance;
            return that.Policy;
        }
        private void set_12_PrivacyControl_Policy(object instance, object Value)
        {
            var that = (global::FindWord.Controls.PrivacyControl)instance;
            that.Policy = (global::System.String)Value;
        }
        private object get_13_PrivacyControl_Title(object instance)
        {
            var that = (global::FindWord.Controls.PrivacyControl)instance;
            return that.Title;
        }
        private void set_13_PrivacyControl_Title(object instance, object Value)
        {
            var that = (global::FindWord.Controls.PrivacyControl)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_14_HelpControl_Version(object instance)
        {
            var that = (global::FindWord.Controls.HelpControl)instance;
            return that.Version;
        }
        private void set_14_HelpControl_Version(object instance, object Value)
        {
            var that = (global::FindWord.Controls.HelpControl)instance;
            that.Version = (global::System.String)Value;
        }
        private object get_15_HelpControl_Title(object instance)
        {
            var that = (global::FindWord.Controls.HelpControl)instance;
            return that.Title;
        }
        private void set_15_HelpControl_Title(object instance, object Value)
        {
            var that = (global::FindWord.Controls.HelpControl)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_16_HelpControl_QuestionKeyword(object instance)
        {
            var that = (global::FindWord.Controls.HelpControl)instance;
            return that.QuestionKeyword;
        }
        private void set_16_HelpControl_QuestionKeyword(object instance, object Value)
        {
            var that = (global::FindWord.Controls.HelpControl)instance;
            that.QuestionKeyword = (global::System.String)Value;
        }
        private object get_17_HelpControl_QuestionKeywordDescription(object instance)
        {
            var that = (global::FindWord.Controls.HelpControl)instance;
            return that.QuestionKeywordDescription;
        }
        private void set_17_HelpControl_QuestionKeywordDescription(object instance, object Value)
        {
            var that = (global::FindWord.Controls.HelpControl)instance;
            that.QuestionKeywordDescription = (global::System.String)Value;
        }
        private object get_18_HelpControl_StarKeyword(object instance)
        {
            var that = (global::FindWord.Controls.HelpControl)instance;
            return that.StarKeyword;
        }
        private void set_18_HelpControl_StarKeyword(object instance, object Value)
        {
            var that = (global::FindWord.Controls.HelpControl)instance;
            that.StarKeyword = (global::System.String)Value;
        }
        private object get_19_HelpControl_StarKeywordDescription(object instance)
        {
            var that = (global::FindWord.Controls.HelpControl)instance;
            return that.StarKeywordDescription;
        }
        private void set_19_HelpControl_StarKeywordDescription(object instance, object Value)
        {
            var that = (global::FindWord.Controls.HelpControl)instance;
            that.StarKeywordDescription = (global::System.String)Value;
        }
        private object get_20_HelpControl_PlusKeyword(object instance)
        {
            var that = (global::FindWord.Controls.HelpControl)instance;
            return that.PlusKeyword;
        }
        private void set_20_HelpControl_PlusKeyword(object instance, object Value)
        {
            var that = (global::FindWord.Controls.HelpControl)instance;
            that.PlusKeyword = (global::System.String)Value;
        }
        private object get_21_HelpControl_PlusKeywordDescription(object instance)
        {
            var that = (global::FindWord.Controls.HelpControl)instance;
            return that.PlusKeywordDescription;
        }
        private void set_21_HelpControl_PlusKeywordDescription(object instance, object Value)
        {
            var that = (global::FindWord.Controls.HelpControl)instance;
            that.PlusKeywordDescription = (global::System.String)Value;
        }
        private object get_22_AboutControl_Version(object instance)
        {
            var that = (global::FindWord.Controls.AboutControl)instance;
            return that.Version;
        }
        private void set_22_AboutControl_Version(object instance, object Value)
        {
            var that = (global::FindWord.Controls.AboutControl)instance;
            that.Version = (global::System.String)Value;
        }
        private object get_23_AboutControl_Title(object instance)
        {
            var that = (global::FindWord.Controls.AboutControl)instance;
            return that.Title;
        }
        private void set_23_AboutControl_Title(object instance, object Value)
        {
            var that = (global::FindWord.Controls.AboutControl)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_24_AboutControl_VersionTitle(object instance)
        {
            var that = (global::FindWord.Controls.AboutControl)instance;
            return that.VersionTitle;
        }
        private void set_24_AboutControl_VersionTitle(object instance, object Value)
        {
            var that = (global::FindWord.Controls.AboutControl)instance;
            that.VersionTitle = (global::System.String)Value;
        }
        private object get_25_AboutControl_OurName(object instance)
        {
            var that = (global::FindWord.Controls.AboutControl)instance;
            return that.OurName;
        }
        private void set_25_AboutControl_OurName(object instance, object Value)
        {
            var that = (global::FindWord.Controls.AboutControl)instance;
            that.OurName = (global::System.String)Value;
        }
        private object get_26_AboutControl_ProductDetailsTitle(object instance)
        {
            var that = (global::FindWord.Controls.AboutControl)instance;
            return that.ProductDetailsTitle;
        }
        private void set_26_AboutControl_ProductDetailsTitle(object instance, object Value)
        {
            var that = (global::FindWord.Controls.AboutControl)instance;
            that.ProductDetailsTitle = (global::System.String)Value;
        }
        private object get_27_AboutControl_ProductDetails(object instance)
        {
            var that = (global::FindWord.Controls.AboutControl)instance;
            return that.ProductDetails;
        }
        private void set_27_AboutControl_ProductDetails(object instance, object Value)
        {
            var that = (global::FindWord.Controls.AboutControl)instance;
            that.ProductDetails = (global::System.String)Value;
        }
        private object get_28_Shell_Frame(object instance)
        {
            var that = (global::FindWord.Views.Shell)instance;
            return that.Frame;
        }
        private object get_29_StartPageItemsDataTemplateSelector_WordTemplate(object instance)
        {
            var that = (global::FindWord.Common.StartPageItemsDataTemplateSelector)instance;
            return that.WordTemplate;
        }
        private void set_29_StartPageItemsDataTemplateSelector_WordTemplate(object instance, object Value)
        {
            var that = (global::FindWord.Common.StartPageItemsDataTemplateSelector)instance;
            that.WordTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::FindWord.FindWord_XamlTypeInfo.XamlMember xamlMember = null;
            global::FindWord.FindWord_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "FindWord.Common.ViewModelLocator.Container":
                userType = (global::FindWord.FindWord_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FindWord.Common.ViewModelLocator");
                xamlMember = new global::FindWord.FindWord_XamlTypeInfo.XamlMember(this, "Container", "MetroIoc.IContainer");
                xamlMember.Getter = get_0_ViewModelLocator_Container;
                xamlMember.SetIsReadOnly();
                break;
            case "FindWord.Common.ViewModelLocator.NavigationService":
                userType = (global::FindWord.FindWord_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FindWord.Common.ViewModelLocator");
                xamlMember = new global::FindWord.FindWord_XamlTypeInfo.XamlMember(this, "NavigationService", "FindWord.Services.INavigationService");
                xamlMember.Getter = get_1_ViewModelLocator_NavigationService;
                xamlMember.SetIsReadOnly();
                break;
            case "FindWord.Common.ViewModelLocator.Hub":
                userType = (global::FindWord.FindWord_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FindWord.Common.ViewModelLocator");
                xamlMember = new global::FindWord.FindWord_XamlTypeInfo.XamlMember(this, "Hub", "FindWord.Messaging.IHub");
                xamlMember.Getter = get_2_ViewModelLocator_Hub;
                xamlMember.SetIsReadOnly();
                break;
            case "FindWord.Common.ViewModelLocator.DialogService":
                userType = (global::FindWord.FindWord_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FindWord.Common.ViewModelLocator");
                xamlMember = new global::FindWord.FindWord_XamlTypeInfo.XamlMember(this, "DialogService", "FindWord.Services.IDialogService");
                xamlMember.Getter = get_3_ViewModelLocator_DialogService;
                xamlMember.SetIsReadOnly();
                break;
            case "FindWord.Common.ViewModelLocator.ShellViewModel":
                userType = (global::FindWord.FindWord_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FindWord.Common.ViewModelLocator");
                xamlMember = new global::FindWord.FindWord_XamlTypeInfo.XamlMember(this, "ShellViewModel", "FindWord.ViewModels.ShellViewModel");
                xamlMember.Getter = get_4_ViewModelLocator_ShellViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "FindWord.Common.ViewModelLocator.StartPageViewModel":
                userType = (global::FindWord.FindWord_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FindWord.Common.ViewModelLocator");
                xamlMember = new global::FindWord.FindWord_XamlTypeInfo.XamlMember(this, "StartPageViewModel", "FindWord.ViewModels.StartPageViewModel");
                xamlMember.Getter = get_5_ViewModelLocator_StartPageViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "FindWord.Common.ViewModelLocator.WordsWithTheSameLengthViewModel":
                userType = (global::FindWord.FindWord_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FindWord.Common.ViewModelLocator");
                xamlMember = new global::FindWord.FindWord_XamlTypeInfo.XamlMember(this, "WordsWithTheSameLengthViewModel", "FindWord.ViewModels.WordsWithTheSameLengthViewModel");
                xamlMember.Getter = get_6_ViewModelLocator_WordsWithTheSameLengthViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "FindWord.Common.ViewModelLocator.UndoRedoService":
                userType = (global::FindWord.FindWord_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FindWord.Common.ViewModelLocator");
                xamlMember = new global::FindWord.FindWord_XamlTypeInfo.XamlMember(this, "UndoRedoService", "FindWord.Services.UndoRedoService");
                xamlMember.Getter = get_7_ViewModelLocator_UndoRedoService;
                xamlMember.SetIsReadOnly();
                break;
            case "FindWord.Common.ViewModelLocator.SearchService":
                userType = (global::FindWord.FindWord_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FindWord.Common.ViewModelLocator");
                xamlMember = new global::FindWord.FindWord_XamlTypeInfo.XamlMember(this, "SearchService", "FindWord.Services.SearchService");
                xamlMember.Getter = get_8_ViewModelLocator_SearchService;
                xamlMember.SetIsReadOnly();
                break;
            case "FindWord.Common.ViewModelLocator.AppState":
                userType = (global::FindWord.FindWord_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FindWord.Common.ViewModelLocator");
                xamlMember = new global::FindWord.FindWord_XamlTypeInfo.XamlMember(this, "AppState", "FindWord.Services.AppState");
                xamlMember.Getter = get_9_ViewModelLocator_AppState;
                xamlMember.SetIsReadOnly();
                break;
            case "FindWord.Controls.PrivacyControl.Version":
                userType = (global::FindWord.FindWord_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FindWord.Controls.PrivacyControl");
                xamlMember = new global::FindWord.FindWord_XamlTypeInfo.XamlMember(this, "Version", "String");
                xamlMember.Getter = get_10_PrivacyControl_Version;
                xamlMember.Setter = set_10_PrivacyControl_Version;
                break;
            case "FindWord.Controls.PrivacyControl.Email":
                userType = (global::FindWord.FindWord_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FindWord.Controls.PrivacyControl");
                xamlMember = new global::FindWord.FindWord_XamlTypeInfo.XamlMember(this, "Email", "String");
                xamlMember.Getter = get_11_PrivacyControl_Email;
                xamlMember.Setter = set_11_PrivacyControl_Email;
                break;
            case "FindWord.Controls.PrivacyControl.Policy":
                userType = (global::FindWord.FindWord_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FindWord.Controls.PrivacyControl");
                xamlMember = new global::FindWord.FindWord_XamlTypeInfo.XamlMember(this, "Policy", "String");
                xamlMember.Getter = get_12_PrivacyControl_Policy;
                xamlMember.Setter = set_12_PrivacyControl_Policy;
                break;
            case "FindWord.Controls.PrivacyControl.Title":
                userType = (global::FindWord.FindWord_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FindWord.Controls.PrivacyControl");
                xamlMember = new global::FindWord.FindWord_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.Getter = get_13_PrivacyControl_Title;
                xamlMember.Setter = set_13_PrivacyControl_Title;
                break;
            case "FindWord.Controls.HelpControl.Version":
                userType = (global::FindWord.FindWord_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FindWord.Controls.HelpControl");
                xamlMember = new global::FindWord.FindWord_XamlTypeInfo.XamlMember(this, "Version", "String");
                xamlMember.Getter = get_14_HelpControl_Version;
                xamlMember.Setter = set_14_HelpControl_Version;
                break;
            case "FindWord.Controls.HelpControl.Title":
                userType = (global::FindWord.FindWord_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FindWord.Controls.HelpControl");
                xamlMember = new global::FindWord.FindWord_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.Getter = get_15_HelpControl_Title;
                xamlMember.Setter = set_15_HelpControl_Title;
                break;
            case "FindWord.Controls.HelpControl.QuestionKeyword":
                userType = (global::FindWord.FindWord_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FindWord.Controls.HelpControl");
                xamlMember = new global::FindWord.FindWord_XamlTypeInfo.XamlMember(this, "QuestionKeyword", "String");
                xamlMember.Getter = get_16_HelpControl_QuestionKeyword;
                xamlMember.Setter = set_16_HelpControl_QuestionKeyword;
                break;
            case "FindWord.Controls.HelpControl.QuestionKeywordDescription":
                userType = (global::FindWord.FindWord_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FindWord.Controls.HelpControl");
                xamlMember = new global::FindWord.FindWord_XamlTypeInfo.XamlMember(this, "QuestionKeywordDescription", "String");
                xamlMember.Getter = get_17_HelpControl_QuestionKeywordDescription;
                xamlMember.Setter = set_17_HelpControl_QuestionKeywordDescription;
                break;
            case "FindWord.Controls.HelpControl.StarKeyword":
                userType = (global::FindWord.FindWord_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FindWord.Controls.HelpControl");
                xamlMember = new global::FindWord.FindWord_XamlTypeInfo.XamlMember(this, "StarKeyword", "String");
                xamlMember.Getter = get_18_HelpControl_StarKeyword;
                xamlMember.Setter = set_18_HelpControl_StarKeyword;
                break;
            case "FindWord.Controls.HelpControl.StarKeywordDescription":
                userType = (global::FindWord.FindWord_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FindWord.Controls.HelpControl");
                xamlMember = new global::FindWord.FindWord_XamlTypeInfo.XamlMember(this, "StarKeywordDescription", "String");
                xamlMember.Getter = get_19_HelpControl_StarKeywordDescription;
                xamlMember.Setter = set_19_HelpControl_StarKeywordDescription;
                break;
            case "FindWord.Controls.HelpControl.PlusKeyword":
                userType = (global::FindWord.FindWord_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FindWord.Controls.HelpControl");
                xamlMember = new global::FindWord.FindWord_XamlTypeInfo.XamlMember(this, "PlusKeyword", "String");
                xamlMember.Getter = get_20_HelpControl_PlusKeyword;
                xamlMember.Setter = set_20_HelpControl_PlusKeyword;
                break;
            case "FindWord.Controls.HelpControl.PlusKeywordDescription":
                userType = (global::FindWord.FindWord_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FindWord.Controls.HelpControl");
                xamlMember = new global::FindWord.FindWord_XamlTypeInfo.XamlMember(this, "PlusKeywordDescription", "String");
                xamlMember.Getter = get_21_HelpControl_PlusKeywordDescription;
                xamlMember.Setter = set_21_HelpControl_PlusKeywordDescription;
                break;
            case "FindWord.Controls.AboutControl.Version":
                userType = (global::FindWord.FindWord_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FindWord.Controls.AboutControl");
                xamlMember = new global::FindWord.FindWord_XamlTypeInfo.XamlMember(this, "Version", "String");
                xamlMember.Getter = get_22_AboutControl_Version;
                xamlMember.Setter = set_22_AboutControl_Version;
                break;
            case "FindWord.Controls.AboutControl.Title":
                userType = (global::FindWord.FindWord_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FindWord.Controls.AboutControl");
                xamlMember = new global::FindWord.FindWord_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.Getter = get_23_AboutControl_Title;
                xamlMember.Setter = set_23_AboutControl_Title;
                break;
            case "FindWord.Controls.AboutControl.VersionTitle":
                userType = (global::FindWord.FindWord_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FindWord.Controls.AboutControl");
                xamlMember = new global::FindWord.FindWord_XamlTypeInfo.XamlMember(this, "VersionTitle", "String");
                xamlMember.Getter = get_24_AboutControl_VersionTitle;
                xamlMember.Setter = set_24_AboutControl_VersionTitle;
                break;
            case "FindWord.Controls.AboutControl.OurName":
                userType = (global::FindWord.FindWord_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FindWord.Controls.AboutControl");
                xamlMember = new global::FindWord.FindWord_XamlTypeInfo.XamlMember(this, "OurName", "String");
                xamlMember.Getter = get_25_AboutControl_OurName;
                xamlMember.Setter = set_25_AboutControl_OurName;
                break;
            case "FindWord.Controls.AboutControl.ProductDetailsTitle":
                userType = (global::FindWord.FindWord_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FindWord.Controls.AboutControl");
                xamlMember = new global::FindWord.FindWord_XamlTypeInfo.XamlMember(this, "ProductDetailsTitle", "String");
                xamlMember.Getter = get_26_AboutControl_ProductDetailsTitle;
                xamlMember.Setter = set_26_AboutControl_ProductDetailsTitle;
                break;
            case "FindWord.Controls.AboutControl.ProductDetails":
                userType = (global::FindWord.FindWord_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FindWord.Controls.AboutControl");
                xamlMember = new global::FindWord.FindWord_XamlTypeInfo.XamlMember(this, "ProductDetails", "String");
                xamlMember.Getter = get_27_AboutControl_ProductDetails;
                xamlMember.Setter = set_27_AboutControl_ProductDetails;
                break;
            case "FindWord.Views.Shell.Frame":
                userType = (global::FindWord.FindWord_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FindWord.Views.Shell");
                xamlMember = new global::FindWord.FindWord_XamlTypeInfo.XamlMember(this, "Frame", "Windows.UI.Xaml.Controls.Frame");
                xamlMember.Getter = get_28_Shell_Frame;
                xamlMember.SetIsReadOnly();
                break;
            case "FindWord.Common.StartPageItemsDataTemplateSelector.WordTemplate":
                userType = (global::FindWord.FindWord_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FindWord.Common.StartPageItemsDataTemplateSelector");
                xamlMember = new global::FindWord.FindWord_XamlTypeInfo.XamlMember(this, "WordTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.Getter = get_29_StartPageItemsDataTemplateSelector_WordTemplate;
                xamlMember.Setter = set_29_StartPageItemsDataTemplateSelector_WordTemplate;
                break;
            }
            return xamlMember;
        }

    }

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(global::System.String input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::FindWord.FindWord_XamlTypeInfo.XamlSystemBaseType
    {
        global::FindWord.FindWord_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::FindWord.FindWord_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public global::System.Object CreateFromString(global::System.String input)
        {
            if (_enumValues != null)
            {
                global::System.Int32 value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    global::System.Int32 enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( global::System.String.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::FindWord.FindWord_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::FindWord.FindWord_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(global::System.String targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}


